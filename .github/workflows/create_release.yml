name: Releases

on: 
  push:
    branches: ['5.2']
    paths: ['RELEASE_VERSION']

jobs:

  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./

    permissions:
      contents: write
    steps:
    - name: "Checkout source code"
      uses: actions/checkout@v3

    - name: Read the RELEASE_VERSION file
      id: getversion
      run: echo "version=$(cat RELEASE_VERSION)" >> $GITHUB_OUTPUT

    - uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Install library deps
      working-directory: ./CarConfigurator
      run: npm ci

    - name: Build frontend lib
      working-directory: ./CarConfigurator
      run: npm run build-all

    - name: Move all content into output directory for archiving
      run: items=(./CarConfigurator/dist/www/*) && mkdir TensorConfiguratorFrontend-${{ github.ref_name }}-${{ steps.getversion.outputs.version }} && mv ${items[*]} TensorConfiguratorFrontend-${{ github.ref_name }}-${{ steps.getversion.outputs.version }}/

    - name: Archive Release tar.gz
      uses: thedoctor0/zip-release@0.7.1
      with:
        directory: '.'
        path: 'TensorConfiguratorFrontend-${{ github.ref_name }}-${{ steps.getversion.outputs.version }}'
        type: 'tar'
        filename: '${{ steps.getversion.outputs.version }}#${{ github.ref_name }}-${{ github.event.repository.name }}.tar.gz'
        exclusions: ''

    - name: Archive Release .zip
      uses: thedoctor0/zip-release@0.7.1
      with:
        directory: '.'
        path: 'TensorConfiguratorFrontend-${{ github.ref_name }}-${{ steps.getversion.outputs.version }}'
        type: 'zip'
        filename: '${{ steps.getversion.outputs.version }}#${{ github.ref_name }}-${{ github.event.repository.name }}.zip'
        exclusions: ''

    - name: "Make the release"
      uses: ncipollo/release-action@v1
      with:
        tag: "${{ steps.getversion.outputs.version }}#${{ github.ref_name }}-${{ github.event.repository.name }}"
        artifacts: "${{ github.event.repository.name }}-${{ github.ref_name }}-${{ steps.getversion.outputs.version }}.zip,${{ github.event.repository.name }}-${{ github.ref_name }}-${{ steps.getversion.outputs.version }}.tar.gz"
        generateReleaseNotes: true
